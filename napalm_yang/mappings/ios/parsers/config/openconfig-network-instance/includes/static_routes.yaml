---
_process:
    - mode: gate
      when: "{{ protocol_key != 'static static' }}"
static:
    _process:
        - regexp: "(?P<block>ip route (?P<key>\\d+\\S+ \\d+\\S+).*)"
          from: root_network-instances.0
          when: "{{ network_instance_key == 'global' }}"
          flat: true
          post_process_filter: "{{ key|normalize_prefix }}"
        - regexp: "(?P<block>ip route vrf {{ network_instance_key }} (?P<key>\\d+\\S+ \\d+\\S+).*)"
          from: root_network-instances.0
          when: "{{ network_instance_key != 'global' }}"
          flat: true
          post_process_filter: "{{ key|normalize_prefix }}"
        - regexp: "(?P<block>ipv6 route (?P<key>[0-9a-f:]+\\/\\d+).*)"
          from: root_network-instances.0
          when: "{{ network_instance_key == 'global' }}"
          flat: true
          post_process_filter: "{{ key|normalize_prefix }}"
        - regexp: "(?P<block>ipv6 route vrf {{ network_instance_key }} (?P<key>[0-9a-f:]+\\/\\d+).*)"
          from: root_network-instances.0
          when: "{{ network_instance_key != 'global' }}"
          flat: true
          post_process_filter: "{{ key|normalize_prefix }}"
    config:
        _process: unnecessary
        prefix:
            _process:
                - mode: value
                  value: "{{ static_key }}"
        set-tag:
            _process: not_implemented
    next-hops:
        _process: unnecessary
        next-hop:
            _process:
                - regexp: "(?P<block>ip route (vrf {{ network_instance_key }} )*\\d+\\S+ \\d+\\S+ (?P<key>(?:(?P<interface_ref>[a-z]\\S*) ?)?(?P<next_hop>\\d+.\\d+.\\d+.\\d+)?).*)"
                  post_process_filter: "{{ key|trim }}"
                - regexp: "(?P<block>ipv6 route (vrf {{ network_instance_key }} )*{{ static_key }} (?P<key>(?:(?P<interface_ref>[a-z]\\S*) ?)?(?P<next_hop>[0-9a-f:]+:[0-9a-f:]+)?).*)"
                  post_process_filter: "{{ key|trim }}"
            config:
                _process: unnecessary
                index:
                    _process: unnecessary
                metric:
                    _process:
                        - regexp: "{{ next_hop_key }} (?P<value>\\d+)"
                next-hop:
                    _process:
                        - mode: value
                          value: "DROP"
                          when: "{{ extra_vars.interface_ref == 'Null0' }}"
                        - mode: value
                          value: "{{ extra_vars.next_hop|normalize_address }}"
                          when: "{{ extra_vars.next_hop is not none }}"
                recurse:
                    _process: not_implemented
            index:
                _process: unnecessary
            interface-ref:
                _process: unnecessary
                config:
                    _process:
                        - mode: gate
                          when: "{{ extra_vars.interface_ref is none }}"
                    interface:
                        _process:
                            - mode: value
                              value: "{{ extra_vars.interface_ref.split('.', 1)[0] }}"
                    subinterface:
                        _process:
                            - mode: value
                              value: "{{ extra_vars.interface_ref.split('.', 1)[-1] }}"
                              when: "{{ '.' in extra_vars.interface_ref }}"
                state:
                    _process: not_implemented
            state:
                _process: not_implemented
    prefix:
        _process: unnecessary
    state:
        _process: not_implemented

